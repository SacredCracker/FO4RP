# ifdef __SERVER
// =============== SERVER ===============

// import void OpenLinkRemote( Critter& player, string& url) from "link";

void OpenLinkRemote( Critter& player, string& url) {
    player.RunClientScript( "link@OpenLinkRemote", 0, 0, 0, url, null );
}

# pragma bindfunc "void PlayerAuth(Critter&) -> rust_dll/server.dll player_auth"
void unsafe_PlayerAuth( Critter& player, int, int, int, string@, int[]@ ) {
    PlayerAuth(player);
}

# endif

# ifdef __CLIENT
// =============== CLIENT ===============

# pragma bindfunc "void OpenLink(string&) -> rust_dll/client.dll open_link"

void OpenLinkRemote (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    if(p3 != null) {
        OpenLink(p3);
    }
}

# pragma bindfunc "void OpenLinkAuth(string&, int, int, int) -> rust_dll/client.dll open_link_auth"

void OpenWithKey (int p0, int p1, int p2, string@ p3, int[]@ p4) {
    CritterCl@ char = GetChosen();
    if (char is null) {
        Message("Chosen is null, can't auth");
    }
    //string msg = "OpenWithKey: "+p0+" "+p1+" "+p2;
    //Message(msg);
    string web = __Host+":8000";
    OpenLinkAuth("http://"+web+"/char/"+char.Id+"/edit/avatar", p0, p1, p2);
}

void RequestWebsiteAuth(CritterCl& player) {
    RunServerScriptUnsafe( "link@unsafe_PlayerAuth", 0, 0, 0, null, null );
}

# endif
